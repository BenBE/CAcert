#! /bin/sh
# @(#)(CAcert) $Id: commmodule,v 1.1 2009-12-28 15:09:24 wytze Exp $
### BEGIN INIT INFO
# Provides:          commmodule
# Required-Start:    $local_fs $remote_fs $syslog mysql
# Required-Stop:     $local_fs $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start and stop the CAcert CommModule processes
# Description:       This file should be used to start and stop the CAcert
#                    CommModule processes from /etc/init.d.
### END INIT INFO

# Author: Wytze van der Raay <wytze@cacert.org>
#
# Please remove the "Author" lines above and replace them
# with your own name if you copy and modify this script.

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="CAcert CommModule processes start/stop"
NAME=commmodule
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

if [ "$1" != "setup" ]
then
	if [ "${COMMROOT}" = "" ]
	then
		echo "$0: COMMROOT not set"
		exit 1
	fi
	if [ "${COMMROLE}" = "" ]
	then
		echo "$0: COMMROLE not set"
		exit 1
	fi
	if [ ! -d ${COMMROOT} ]
	then
		echo "$0: ${COMMROOT} is not a directory"
		exit 1
	fi
	if [ ! -x ${COMMROOT}/commdaemon ]
	then
		echo "$0: ${COMMROOT}/commdaemon not present or non-executable"
		exit 1
	fi
	if [ ! -x ${COMMROOT}/${COMMROLE}.pl ]
	then
		echo "$0: ${COMMROOT}/${COMMROLE}.pl not present or non executable"
		exit 1
	fi

	DAEMON=${COMMROOT}/commdaemon
	DAEMON_ARGS="${COMMROOT}/${COMMROLE}.pl"
	ACTIVE=${COMMROOT}/${COMMROLE}.pl-active
fi

# Load usbserial module with proper parameters
/sbin/modprobe usbserial vendor=0x067b product=0x2501

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	start-stop-daemon --start --quiet --pidfile $PIDFILE \
		--chdir ${COMMROOT} --background --exec $DAEMON --test \
		> /dev/null \
		|| return 1
	start-stop-daemon --start --quiet --pidfile $PIDFILE \
		--chdir ${COMMROOT} --background --exec $DAEMON -- \
		$DAEMON_ARGS \
		|| return 2
	# Add code here, if necessary, that waits for the process to be ready
	# to handle requests from services started subsequently which depend
	# on this one.  As a last resort, sleep for some time.
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	rm -f ${ACTIVE}
	sleep 5
	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME
	RETVAL="$?"
	[ "$RETVAL" = 2 ] && return 2
	# Many daemons don't delete their pidfiles when they exit.
	rm -f $PIDFILE
	return "$RETVAL"
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  restart|force-reload)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  setup)
  	# setup default installation of commmodule scripts
	cp ${NAME} /etc/init.d
	chown root.root /etc/init.d/${NAME}
	update-rc.d -f ${NAME} remove
	update-rc.d ${NAME} defaults 90 20
	(echo "COMMROOT=/home/cacert/www/CommModule";
	 echo "COMMROLE=client") >/etc/default/${NAME}
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload|setup}" >&2
	exit 3
	;;
esac

:
